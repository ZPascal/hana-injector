name: Build and publish

on:
  release:
    types: [ published ]

jobs:

  python-build-and-publish:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.x']

    steps:
      - name: Checkout the repository and the branch
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
          cache: 'pip'

      - name: Install the requirements
        run: pip install -r requirements.txt && pip install build mkdocs mkdocs-material

      - name: Build a binary wheel and a source tarball
        run: python -m build --sdist --wheel --outdir dist/

      - name: Setup the GitHub user
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

      - name: Update the GitHub pages documentation
        run: cd docs && mkdocs gh-deploy --force && cd ..

      - name: Publish distribution package to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}

  docker-build-and-publish:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Build the Docker image
        run: docker build . -t z9pascal/hana-injector:$(cat ./Dockerfile | grep -Po 'version="\K.*?(?=")')-latest

      - name: Relase the Docker image
        run: echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u z9pascal --password-stdin && docker push z9pascal/hana-injector:$(cat ./Dockerfile | grep -Po 'version="\K.*?(?=")')-latest
